---

- name: Create nova and nova_api DB
  mysql_db:
    login_user:     root
    login_password: '{{ mysql_password }}'
    name:           '{{ item }}'
    state:          present
  with_items:
    - nova
    - nova_api

- name: Create nova and nova_api DB user
  mysql_user:
    login_user:     root
    login_password: '{{ mysql_password }}'
    login_host:     localhost
    name:           nova
    password:       '{{ nova_DB_password }}'
    priv:           '{{ item.name }}.*:ALL,GRANT'
    state:          present
    host:           '{{ item.host }}'
    append_privs:   yes
  with_items:
    - name: nova
      host: localhost
    - name: nova
      host: '%'
    - name: nova_api
      host: localhost
    - name: nova_api
      host: '%' 

- name: Setup nova
  yum:
    name: '{{ item }}'
    state: present
  with_items:
    - openstack-nova-api
    - openstack-nova-conductor
    - openstack-nova-console
    - openstack-nova-novncproxy
    - openstack-nova-scheduler

- name: remove nova.conf
  command: rm -fr /etc/nova/nova.conf

- name: Configure nova compute and metadata
  ini_file:
    dest:     /etc/nova/nova.conf
    section:  DEFAULT
    option:   '{{ item.key }}'
    value:    '{{ item.value }}'
  with_dict:
    enabled_apis:    'osapi_compute,metadata'
    transport_url:   'rabbit://{{ rabbitmq_user }}:{{ rabbitmq_password }}@{{ rabbitmq_host }}'
    auth_strategy:   'keystone'
    my_ip:           '{{ ip_address }}'
    use_neutron:     'False'
    firewall_driver: 'nova.virt.firewall.NoopFirewallDriver'

- name: Configure nova DB access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: '{{ item.key }}'
    option:  connection
    value:   '{{ item.value }}'
  with_dict:
    api_database: 'mysql+pymysql://nova:{{ nova_DB_password }}@{{ nova_host }}/nova_api'
    database:     'mysql+pymysql://nova:{{ nova_DB_password }}@{{ nova_host }}/nova'

- name: Configure nova keystone
  ini_file:
    dest:    /etc/nova/nova.conf
    section: keystone_authtoken
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    auth_uri:            'http://{{ keystone_host }}:5000'
    auth_url:            'http://{{ keystone_host }}:35357'
    memcached_servers:   '{{ keystone_host }}:11211'
    auth_type:           'password'
    project_domain_name: 'Default'
    user_domain_name:    'Default'
    project_name:        'service'
    username:            'nova'
    password:            '{{ nova_keystone_password }}'

- name: Configure nova vnc
  ini_file:
    dest:     /etc/nova/nova.conf
    section:  vnc
    option:   '{{ item.key }}'
    value:    '{{ item.value }}'
  with_dict:
    vncserver_listen:              '{{ ip_address }}'
    vncserver_proxyclient_address: '{{ ip_address }}'

- name: Configure nova glance
  ini_file:
    dest:    /etc/nova/nova.conf
    section: glance
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    api_servers:   'http://{{ glance_host }}:9292'

- name: Configure nova oslo_concurrency
  ini_file:
    dest:    /etc/nova/nova.conf
    section: oslo_concurrency
    option:  lock_path
    value:   '/var/lib/nova/tmp'

- name: Populate the Compute service DB
  changed_when: no
  command:      'nova-manage {{ item }} sync'
  become:       true
  become_user:  nova
  with_items:
    - api_db
    - db

- name: Enabled nova
  service:
    name:    '{{ item }}'
    state:   started
    enabled: yes
  with_items:
    - openstack-nova-api.service
    - openstack-nova-consoleauth.service
    - openstack-nova-scheduler.service
    - openstack-nova-conductor.service
    - openstack-nova-novncproxy.service
